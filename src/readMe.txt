The app reads the file by means of Stream api. When words are acquired by subList() method there is a plain and clear memory leakage, because the heap was increased till 400 MB (!). It is explained in Java documentation 'The returned list is backed by this list, so non-structural changes in the returned list are reflected in this list, and vice-versa.'
So returning a sub-list will keep the original list from being garbage collected. If I had lesser memory or if there was more objects then I would end up with memory leak error. That wasn't right. So I just changed the code that when I acquire a subList I just put it to new ArrayList(). This allows gc to garbage collect all the original objects. After that the heap didn't ancreased more than 4 MB. That's the result! So now there can't be any memory leakage.